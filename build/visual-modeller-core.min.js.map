{"version":3,"file":"visual-modeller-core.min.js","sources":["../src/Link.js","../src/Log.js","../src/Model.js","../src/Node.js","../src/Socket.js"],"sourcesContent":["class Link {\n    constructor(options) {\n        this.socket1 = options.socket1 || null;\n        this.socket2 = options.socket2 || null;\n        this.state = options.state || {};\n    }\n\n    getOtherSocket(socket) {\n        if (socket === this.socket1) {\n            return this.socket2;\n        } else if (socket === this.socket2) {\n            return this.socket1;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport { Link };","class Log {\n    constructor(options) {\n        this.name = options.name || 'log';\n        this.target = options.target || null;\n        this.states = [];\n    }\n\n    writeToLog() {\n        this.states.push(this.target.state);\n    }\n}\n\nexport { Log };","class Model {\n    constructor(options) {\n        this.nodes = options.nodes || [];\n        this.links = options.links || [];\n        this.logs = options.logs || [];\n        this.maxNodeId = 0;\n        this.maxLinkId = 0;\n        this.maxLogId = 0;\n    }\n\n    getNodeId() {\n        let newNodeId = `node-${this.maxNodeId}`;\n        this.maxNodeId++;\n        return newNodeId;\n    }\n\n    getLinkId() {\n        let newLinkId = `link-${this.maxLinkId}`;\n        this.maxLinkId++;\n        return newLinkId;\n    }\n\n    getLogId() {\n        let newLogId = `log-${this.maxLogId}`;\n        this.maxLogId++;\n        return newLogId;\n    }\n\n    addNode(node) {\n        node.id = this.getNodeId();\n        this.nodes.push(node);\n    }\n\n    addLink(link) {\n        link.id = this.getLinkId();\n        const s1 = link.socket1;\n        s1.link = link;\n        s1.otherSocket = link.socket2;\n        const s2 = link.socket2;\n        s2.link = link;\n        s2.otherSocket = link.socket1;\n        this.links.push(link);\n    }\n\n    addLog(log) {\n        log.id = this.getLogId();\n        this.logs.push(log);\n    }\n\n    removeNode(node) {\n        this.nodes = this.nodes.filter(n => n !== node);\n    }\n\n    removeLink(link) {\n        this.links = this.links.filter(l => l !== link);\n    }\n\n    removeLog(log) {\n        this.logs = this.logs.filter(l => l !== log);\n    }\n\n    removeNodeById(id) {\n        this.nodes = this.nodes.filter(n => n.id !== id);\n    }\n\n    removeLinkById(id) {\n        this.links = this.links.filter(l => l.id !== id);\n    }\n\n    removeLogById(id) {\n        this.logs = this.logs.filter(l => l.id !== id);\n    }\n\n    getLinkBySocket(socket) {\n        return this.links.find(l => l.socket1 === socket || l.socket2 === socket);\n    }\n\n    getNodeBySocket(socket) {\n        return this.nodes.find(n => n.sockets.includes(socket));\n    }\n}\n\nexport { Model };","class Node {\n    constructor(options) {\n        this.name = options.name || 'node';\n        this.sockets = [];\n        this.state = options.state || {};\n        this.maxSocketId = 0;\n        if (options.sockets) {\n            options.sockets.forEach(socket => {\n                this.addSocket(socket);\n            });\n        }\n    }\n\n    getSocketId() {\n        let newSocketId = `socket-${this.maxSocketId}`;\n        this.maxSocketId++;\n        return newSocketId;\n    }\n\n    get leftSockets() {\n        return this.sockets.filter(s => s.position === 'left');\n    }\n\n    get rightSockets() {\n        return this.sockets.filter(s => s.position === 'right');\n    }\n\n    get topSockets() {\n        return this.sockets.filter(s => s.position === 'top');\n    }\n\n    get bottomSockets() {\n        return this.sockets.filter(s => s.position === 'bottom');\n    }\n    \n    addSocket(socket) {\n        socket.id = this.getSocketId();\n        this.sockets.push(socket);\n    }\n\n    setSocketByIndex(index, socket) {\n        socket.id = this.getSocketId();\n        this.sockets[index] = socket;\n    }\n\n    getSocketByIndex(index) {\n        return this.sockets[index];\n    }\n    \n    getSocketByName(name) {\n        return this.sockets.find(s => s.name === name);\n    }\n\n    removeSocket(socket) {\n        this.sockets = this.sockets.filter(s => s !== socket);\n    }\n\n    removeSocketById(id) {\n        this.sockets = this.sockets.filter(s => s.id !== id);\n    }\n\n    removeSocketByIndex(index) {\n        this.sockets = this.sockets.filter((s, i) => i !== index);\n    }\n\n}\n\nexport { Node };\n","class Socket {\n    constructor(options) {\n        this.name = options.name || 'socket';\n        this.state = options.state || {};\n        this.linkId = options.linkId || '';\n        this.position = options.position || 'left';  \n    }\n}\n\nexport { Socket };"],"names":["constructor","options","this","socket1","socket2","state","getOtherSocket","socket","name","target","states","writeToLog","push","nodes","links","logs","maxNodeId","maxLinkId","maxLogId","getNodeId","newNodeId","getLinkId","newLinkId","getLogId","newLogId","addNode","node","id","addLink","link","s1","otherSocket","s2","addLog","log","removeNode","filter","n","removeLink","l","removeLog","removeNodeById","removeLinkById","removeLogById","getLinkBySocket","find","getNodeBySocket","sockets","includes","maxSocketId","forEach","addSocket","getSocketId","newSocketId","leftSockets","s","position","rightSockets","topSockets","bottomSockets","setSocketByIndex","index","getSocketByIndex","getSocketByName","removeSocket","removeSocketById","removeSocketByIndex","i","linkId"],"mappings":"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"}