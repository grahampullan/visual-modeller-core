{"version":3,"file":"visual-modeller-core.min.js","sources":["../src/Link.js","../src/Log.js","../src/Model.js","../src/Node.js","../src/Socket.js"],"sourcesContent":["class Link {\n    constructor(options) {\n        this.socket1 = options.socket1 || null;\n        this.socket2 = options.socket2 || null;\n        this.state = options.state || {};\n    }\n\n    getOtherSocket(socket) {\n        if (socket === this.socket1) {\n            return this.socket2;\n        } else if (socket === this.socket2) {\n            return this.socket1;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport { Link };","class Log {\n    constructor(options) {\n        this.name = options.name || 'log';\n        this.target = options.target || null;\n        this.states = [];\n    }\n\n    writeToLog() {\n        this.states.push({...this.target.state});\n    }\n\n    clear() {\n        this.states = [];\n    }\n}\n\nexport { Log };","class Model {\n    constructor(options) {\n        this.nodes = options.nodes || [];\n        this.links = options.links || [];\n        this.logs = options.logs || [];\n        this.maxNodeId = 0;\n        this.maxLinkId = 0;\n        this.maxLogId = 0;\n    }\n\n    getNodeId() {\n        let newNodeId = `node-${this.maxNodeId}`;\n        this.maxNodeId++;\n        return newNodeId;\n    }\n\n    getLinkId() {\n        let newLinkId = `link-${this.maxLinkId}`;\n        this.maxLinkId++;\n        return newLinkId;\n    }\n\n    getLogId() {\n        let newLogId = `log-${this.maxLogId}`;\n        this.maxLogId++;\n        return newLogId;\n    }\n\n    addNode(node) {\n        node.id = this.getNodeId();\n        this.nodes.push(node);\n    }\n\n    addLink(link) {\n        link.id = this.getLinkId();\n        const s1 = link.socket1;\n        s1.link = link;\n        s1.otherSocket = link.socket2;\n        const s2 = link.socket2;\n        s2.link = link;\n        s2.otherSocket = link.socket1;\n        this.links.push(link);\n    }\n\n    addLog(log) {\n        log.id = this.getLogId();\n        this.logs.push(log);\n    }\n\n    removeNode(node) {\n        this.nodes = this.nodes.filter(n => n !== node);\n    }\n\n    removeLink(link) {\n        this.links = this.links.filter(l => l !== link);\n    }\n\n    removeLog(log) {\n        this.logs = this.logs.filter(l => l !== log);\n    }\n\n    removeNodeById(id) {\n        this.nodes = this.nodes.filter(n => n.id !== id);\n    }\n\n    removeLinkById(id) {\n        this.links = this.links.filter(l => l.id !== id);\n    }\n\n    removeLogById(id) {\n        this.logs = this.logs.filter(l => l.id !== id);\n    }\n\n    clearLogs() {\n        this.logs.forEach(l => l.clear());\n    }\n\n    getLinkBySocket(socket) {\n        return this.links.find(l => l.socket1 === socket || l.socket2 === socket);\n    }\n\n    getNodeBySocket(socket) {\n        return this.nodes.find(n => n.sockets.includes(socket));\n    }\n}\n\nexport { Model };","class Node {\n    constructor(options) {\n        this.name = options.name || 'node';\n        this.sockets = [];\n        this.state = options.state || {};\n        this.maxSocketId = 0;\n        if (options.sockets) {\n            options.sockets.forEach(socket => {\n                this.addSocket(socket);\n            });\n        }\n    }\n\n    getSocketId() {\n        let newSocketId = `socket-${this.maxSocketId}`;\n        this.maxSocketId++;\n        return newSocketId;\n    }\n\n    get leftSockets() {\n        return this.sockets.filter(s => s.position === 'left');\n    }\n\n    get rightSockets() {\n        return this.sockets.filter(s => s.position === 'right');\n    }\n\n    get topSockets() {\n        return this.sockets.filter(s => s.position === 'top');\n    }\n\n    get bottomSockets() {\n        return this.sockets.filter(s => s.position === 'bottom');\n    }\n    \n    addSocket(socket) {\n        socket.id = this.getSocketId();\n        this.sockets.push(socket);\n    }\n\n    setSocketByIndex(index, socket) {\n        socket.id = this.getSocketId();\n        this.sockets[index] = socket;\n    }\n\n    getSocketByIndex(index) {\n        return this.sockets[index];\n    }\n    \n    getSocketByName(name) {\n        return this.sockets.find(s => s.name === name);\n    }\n\n    removeSocket(socket) {\n        this.sockets = this.sockets.filter(s => s !== socket);\n    }\n\n    removeSocketById(id) {\n        this.sockets = this.sockets.filter(s => s.id !== id);\n    }\n\n    removeSocketByIndex(index) {\n        this.sockets = this.sockets.filter((s, i) => i !== index);\n    }\n\n}\n\nexport { Node };\n","class Socket {\n    constructor(options) {\n        this.name = options.name || 'socket';\n        this.state = options.state || {};\n        this.position = options.position || 'left';  \n    }\n}\n\nexport { Socket };"],"names":["constructor","options","this","socket1","socket2","state","getOtherSocket","socket","name","target","states","writeToLog","push","clear","nodes","links","logs","maxNodeId","maxLinkId","maxLogId","getNodeId","newNodeId","getLinkId","newLinkId","getLogId","newLogId","addNode","node","id","addLink","link","s1","otherSocket","s2","addLog","log","removeNode","filter","n","removeLink","l","removeLog","removeNodeById","removeLinkById","removeLogById","clearLogs","forEach","getLinkBySocket","find","getNodeBySocket","sockets","includes","maxSocketId","addSocket","getSocketId","newSocketId","leftSockets","s","position","rightSockets","topSockets","bottomSockets","setSocketByIndex","index","getSocketByIndex","getSocketByName","removeSocket","removeSocketById","removeSocketByIndex","i"],"mappings":"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"}