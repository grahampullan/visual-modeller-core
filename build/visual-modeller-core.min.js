var visualModellerCore=function(t){"use strict";return t.Link=class{constructor(t){this.socket1=t.socket1||null,this.socket2=t.socket2||null,this.state=t.state||{}}},t.Log=class{constructor(t){this.name=t.name||"log",this.target=t.target||null,this.states=[]}writeToLog(){this.states.push(this.target.state)}},t.Model=class{constructor(t){this.nodes=t.nodes||[],this.links=t.links||[],this.logs=t.logs||[],this.maxNodeId=0,this.maxLinkId=0,this.maxLogId=0}getNodeId(){let t=`node-${this.maxNodeId}`;return this.maxNodeId++,t}getLinkId(){let t=`link-${this.maxLinkId}`;return this.maxLinkId++,t}getLogId(){let t=`log-${this.maxLogId}`;return this.maxLogId++,t}addNode(t){t.id=this.getNodeId(),this.nodes.push(t)}addLink(t){t.id=this.getLinkId(),this.links.push(t)}addLog(t){t.id=this.getLogId(),this.logs.push(t)}removeNode(t){this.nodes=this.nodes.filter((s=>s!==t))}removeLink(t){this.links=this.links.filter((s=>s!==t))}removeLog(t){this.logs=this.logs.filter((s=>s!==t))}removeNodeById(t){this.nodes=this.nodes.filter((s=>s.id!==t))}removeLinkById(t){this.links=this.links.filter((s=>s.id!==t))}removeLogById(t){this.logs=this.logs.filter((s=>s.id!==t))}},t.Node=class{constructor(t){this.name=t.name||"node",this.sockets=[],this.state=t.state||{},this.maxSocketId=0,t.sockets&&t.sockets.forEach((t=>{this.addSocket(t)}))}getSocketId(){let t=`socket-${this.maxSocketId}`;return this.maxSocketId++,t}get leftSockets(){return this.sockets.filter((t=>"left"===t.position))}get rightSockets(){return this.sockets.filter((t=>"right"===t.position))}get topSockets(){return this.sockets.filter((t=>"top"===t.position))}get bottomSockets(){return this.sockets.filter((t=>"bottom"===t.position))}addSocket(t){t.id=this.getSocketId(),this.sockets.push(t)}setSocketByIndex(t,s){s.id=this.getSocketId(),this.sockets[t]=s}getSocketByIndex(t){return this.sockets[t]}getSocketByName(t){return this.sockets.find((s=>s.name===t))}removeSocket(t){this.sockets=this.sockets.filter((s=>s!==t))}removeSocketById(t){this.sockets=this.sockets.filter((s=>s.id!==t))}removeSocketByIndex(t){this.sockets=this.sockets.filter(((s,e)=>e!==t))}},t.Socket=class{constructor(t){this.name=t.name||"socket",this.state=t.state||{},this.linkId=t.linkId||"",this.position=t.position||"left"}},t}({});
//# sourceMappingURL=visual-modeller-core.min.js.map
